@import "../var";

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default padding */
ul[class],
ol[class] {
  padding: 0;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
ul[class],
ol[class],
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Set html default */
html {
  -ms-text-size-adjust:     100%;
  -webkit-text-size-adjust: 100%;
}

/* Set core body defaults */
body {
  direction:                  ltr;
  -moz-font-feature-settings: 'kern';
  -webkit-font-smoothing:     antialiased;
  font-synthesis:             none;
  min-height:                 var(--nw-min-height);
  -moz-osx-font-smoothing:    grayscale;
  -webkit-overflow-scrolling: touch;
  scroll-behavior:            smooth;
  text-align:                 left;
  text-rendering:             optimizeSpeed;
  -webkit-text-size-adjust:   none;
  //pointer-events: none
  z-index:                    0;
}

a,
label {
  -webkit-tap-highlight-color: transparent;
}

ul[class],
ol[class] {
  list-style: none;
}

a:not([class]) {
  text-decoration-skip:     auto;
  text-decoration-skip-ink: auto;
}

img,
canvas {
  display:   block;
  max-width: 100%;
}

img,
video,
figure {
  height:    auto;
  max-width: 100%;
}

video {
  background-color: var(--nw-color-info-100);
  border-radius:    var(--nw-border-radius);
  height:           auto;
  min-height:       calc(100% / 16 * 9);
  width:            100%;
}

* {
  &:focus {
    outline: none;
  }
}

input,
button,
textarea,
select {
  -webkit-appearance: none;
  border-radius:      0;
  box-sizing:         border-box;
  font:               inherit;
  font-weight:        normal;
  margin:             0;
}

input,
textarea,
select,
.content-editable {
  background: transparent;
  border:     0 none;
  box-sizing: border-box;
  display:    block;
  max-width:  100%;
  padding:    0;
  width:      100%;

  &:focus {
    background-color: transparent;
    outline:          none;
  }

  &:disabled {
    background-color: transparent;
  }
}

input {
  overflow:       visible;
  vertical-align: middle;
}

select {
  text-transform: none;
  vertical-align: middle;

  optgroup {
    font:        inherit;
    font-weight: bold;
  }
}

textarea {
  max-width: 100%;
  overflow:  auto;
  resize:    none;
  width:     100%;
}

textarea,
select[multiple],
select[size],
.content-editable {
  padding-bottom: var(--nw-margin-small);
  padding-top:    var(--nw-margin-small);
  vertical-align: top;

  &::-moz-placeholder {
    opacity: 1;
  }
}

input[type=radio],
input[type=checkbox] {
  &:not(:disabled) {
    cursor: pointer;
  }
}

button {
  background:     none;
  border:         0;
  box-sizing:     content-box;
  color:          inherit;
  cursor:         pointer;
  font:           inherit;
  line-height:    inherit;
  overflow:       visible;
  vertical-align: inherit;

  &:disabled {
    cursor: default;
  }
}

/* PSEUDO inputs styles*/

//noinspection CssInvalidPseudoSelector
::-webkit-datetime-edit {
  padding: 0;
}

//noinspection CssInvalidPseudoSelector
::-webkit-datetime-edit-text {
  padding: 0 0.3em;
}

::-webkit-inner-spin-button {
  display: none;
}

::-webkit-calendar-picker-indicator {
  display: none;
}

::-webkit-clear-button {
  display: none;
}

/* Blur images when they have no alt attribute */
//img:not([alt])
//  filter: blur(10px)

/* Remove all animations and transitions for people that prefer not to see them */
//@media (prefers-reduced-motion: reduce)

//*
//  animation-duration: 0.01ms !important
//  animation-iteration-count: 1 !important
//  transition-duration: 0.01ms !important
//  scroll-behavior: auto !important

* {
  scrollbar-color: transparent transparent;
  scrollbar-width: 0;

  &:focus {
    outline: none;
  }

  &::-webkit-scrollbar {
    width: 0;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background-color: transparent;
    border:           none;
    border-radius:    0;
  }
}

::-moz-focus-inner {
  border: 0;
}

// IOS safe area
@supports (padding: max(0px,0px)) {
  body, header, footer {
    padding-left:  min(0vmin, env(safe-area-inset-left));
    padding-right: min(0vmin, env(safe-area-inset-right));
  }
}